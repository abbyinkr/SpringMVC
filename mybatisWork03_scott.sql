SELECT USER
FROM DUAL;
--==>> SCOTT

--○ 실습 테이블 생성
CREATE TABLE TBL_STUDENT
(SID	NUMBER		
, NAME	VARCHAR2(30)
, TEL	VARCHAR2(40)
, CONSTRAINT STUDENT_SID_PK PRIMARY KEY(SID)
);
--==>> Table TBL_STUDENT이(가) 생성되었습니다.

CREATE TABLE TBL_GRADE
(SID	NUMBER		
, SUB1	NUMBER(3)
, SUB2	NUMBER(3)
, SUB3	NUMBER(3)
, CONSTRAINT GRADE_SID_PK PRIMARY KEY(SID)
, CONSTRAINT GRADE_SID_FK FOREIGN KEY(SID) REFERENCES TBL_STUDENT(SID)
, CONSTRAINT GRADE_SUB1_CK CHECK(SUB1 BETWEEN 0 AND 100)
, CONSTRAINT GRADE_SUB2_CK CHECK(SUB2 BETWEEN 0 AND 100)
, CONSTRAINT GRADE_SUB3_CK CHECK(SUB3 BETWEEN 0 AND 100)
);
--==>> Table TBL_GRADE이(가) 생성되었습니다.


-- STUDENTVIEW 뷰 생성
CREATE OR REPLACE VIEW STUDENTVIEW
AS
SELECT SID, NAME, TEL
, (SELECT COUNT(*)
    FROM TBL_GRADE
    WHERE SID = S.SID) AS SUB
FROM TBL_STUDENT S;
--==>> View STUDENTVIEW이(가) 생성되었습니다.


-- GRADEVIEW 뷰 생성
CREATE OR REPLACE VIEW GRADEVIEW
AS
SELECT SID, NAME, SUB1, SUB2, SUB3
    , TOT
    , AVG
    , CASE
      WHEN AVG>=60 AND SUB1>=40 AND SUB2>=40 AND SUB3>=40 THEN '합격'
      WHEN AVG>=60 THEN '과락'
      ELSE '불합격'
    END AS CH
FROM (SELECT S.SID AS SID, S.NAME AS NAME, G.SUB1, G.SUB2, G.SUB3
  ,(G.SUB1 + G.SUB2 + G.SUB3) AS TOT
  ,ROUND((G.SUB1 + G.SUB2 + G.SUB3)/3, 1) AS AVG
  FROM TBL_STUDENT S, TBL_GRADE G
  WHERE S.SID = G.SID(+));
--==>> View GRADEVIEW이(가) 생성되었습니다.


--○ 다른 방식의 뷰 생성 구문
CREATE OR REPLACE VIEW GRADEVIEW
AS
SELECT S.SID AS SID
    , S.NAME AS NAME
    , G.SUB1 AS SUB1
    , G.SUB2 AS SUB2
    , G.SUB3 AS SUB3
    ,(G.SUB1 + G.SUB2 + G.SUB3) AS TOT
    , ROUND((G.SUB1 + G.SUB2 + G.SUB3)/3, 1) AS AVG
    , (CASE WHEN (G.SUB1 + G.SUB2 + G.SUB3)/3 <60 THEN '불합격'
            WHEN (G.SUB1 <= 40) OR (G.SUB2 <= 40) OR (G.SUB3 <= 40)  THEN '과락'
            ELSE '합격'
            END) AS CH
FROM TBL_STUDENT S LEFT JOIN TBL_GRADE G
ON S.SID = G.SID;
--==>> View GRADEVIEW이(가) 생성되었습니다.


-- 뷰 조회 (학생)
SELECT SID, NAME, TEL, SUB 
FROM STUDENTVIEW
ORDER BY SID
;
--==>>
/*
2	나그네	010-2342-2342	1
3	나그네	12	1
4	안정미	010-2222-2222	1
5	김아별	010-3333-3333	1
6	소서현	010-4444-4444	1
1	박나봉	010-1111-1111	1
&/
*/



-- 학생수 조회

SELECT COUNT(*) AS COUNT
FROM TBL_STUDENT;

-- 뷰 조회 (성적)
SELECT SID, NAME, SUB1, SUB2, SUB3, TOT, AVG, CH 
FROM GRADEVIEW
ORDER BY SID
;
--==>>
/*
1	박나봉	70	80	90	240	80	합격
2	나그네	70	60	50	180	60	합격
3	나그네	50	40	30	120	40	불합격
4	안정미	90	90	30	210	70	과락
5	김아별	100	90	60	250	83.3	합격
6	소서현	50	70	30	150	50	불합격
*/


CREATE SEQUENCE STUDENTSEQ
NOCACHE;
--==>> Sequence STUDENTSEQ이(가) 생성되었습니다.

-- 데이터 입력 쿼리문
INSERT INTO TBL_STUDENT(SID, NAME, TEL)
VALUES(STUDENTSEQ.NEXTVAL, '박나봉', '010-1111-1111');
INSERT INTO TBL_STUDENT(SID, NAME, TEL)
VALUES(STUDENTSEQ.NEXTVAL, '안정미', '010-2222-2222');
INSERT INTO TBL_STUDENT(SID, NAME, TEL)
VALUES(STUDENTSEQ.NEXTVAL, '김아별', '010-3333-3333');
INSERT INTO TBL_STUDENT(SID, NAME, TEL)
VALUES(STUDENTSEQ.NEXTVAL, '소서현', '010-4444-4444');


--==>> 1 행 이(가) 삽입되었습니다. * 3


INSERT INTO TBL_GRADE(SID, SUB1, SUB2, SUB3)
VALUES(1, 70, 80, 90);
INSERT INTO TBL_GRADE(SID, SUB1, SUB2, SUB3)
VALUES(2, 70, 60, 50);
INSERT INTO TBL_GRADE(SID, SUB1, SUB2, SUB3)
VALUES(3, 50, 40, 30);
INSERT INTO TBL_GRADE(SID, SUB1, SUB2, SUB3)
VALUES(4, 90, 90, 30);
INSERT INTO TBL_GRADE(SID, SUB1, SUB2, SUB3)
VALUES(5, 100, 90, 60);
INSERT INTO TBL_GRADE(SID, SUB1, SUB2, SUB3)
VALUES(6, 50, 70, 30);
--==>> 1 행 이(가) 삽입되었습니다.

--○ 커밋
COMMIT;
--==>> 커밋완료

-- 데이터 삭제 (실행 X)
DELETE
FROM TBL_STUDENT
WHERE SID = 1;



SELECT COUNT(*)
FROM TBL_GRADE
WHERE SID=1;

